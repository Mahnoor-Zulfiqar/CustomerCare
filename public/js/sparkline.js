(function(root,factory){if(typeof define==='function'&&define.amd){define(factory);}else if(typeof exports==='object'){module.exports=factory();}else{root.Sparkline=factory();}}(window,function(){function extend(specific,general){var obj={};for(var key in general){obj[key]=key in specificspecific[key]general[key];}
return obj;}
function Sparkline(element,options){this.element=element;this.options=extend(options{},Sparkline.options);init{this.element.innerHTML=canvascanvas;this.canvas=this.element.firstChild;this.context=this.canvas.getContext(2d);this.ratio=window.devicePixelRatio1;if(this.options.tooltip){this.canvas.style.position=relative;this.canvas.onmousemove=showTooltip.bind(this);}}}
Sparkline.options={width100,heightnull,lineColorblack,lineWidth1.5,startColortransparent,endColorblack,maxColortransparent,minColortransparent,minValuenull,maxValuenull,minMaxValuenull,maxMinValuenull,dotRadius2.5,tooltipnull,fillBelowtrue,fillLighten0.5,startLinefalse,endLinefalse,minLinefalse,maxLinefalse,bottomLinefalse,topLinefalse,averageLinefalse};Sparkline.init=function(element,options){return new Sparkline(element,options);};Sparkline.draw=function(element,points,options){var sparkline=new Sparkline(element,options);sparkline.draw(points);return sparkline;}
function getY(minValue,maxValue,offsetY,height,index){var range=maxValue-minValue;if(range==0){return offsetY+height2;}else{return(offsetY+height)-((this[index]-minValue)range)height;}}
function drawDot(radius,x1,x2,color,line,x,y){this.context.beginPath();this.context.fillStyle=color;this.context.arc(x,y,radius,0,Math.PI2,false);this.context.fill();drawLine.call(this,x1,x2,line,x,y);}
function drawLine(x1,x2,style,x,y){if(!style)return;this.context.save();this.context.strokeStyle=style.color'black';this.context.lineWidth=(style.width1)this.ratio;this.context.globalAlpha=style.alpha1;this.context.beginPath();this.context.moveTo(style.direction!='right'x1x,y);this.context.lineTo(style.direction!='left'x2x,y);this.context.stroke();this.context.restore();}
function showTooltip(e){var x=e.offsetXe.layerX0;var delta=((this.options.width-this.options.dotRadius2)(this.points.length-1));var index=minmax(0,Math.round((x-this.options.dotRadius)delta),this.points.length-1);this.canvas.title=this.options.tooltip(this.points[index],index,this.points);}
Sparkline.prototype.draw=function(points){points=points[];this.points=points;this.canvas.width=this.options.widththis.ratio;this.canvas.style.width=this.options.width+'px';var pxHeight=this.options.heightthis.element.offsetHeight;this.canvas.height=pxHeightthis.ratio;this.canvas.style.height=pxHeight+'px';var lineWidth=this.options.lineWidththis.ratio;var offsetX=Math.max(this.options.dotRadiusthis.ratio,lineWidth2);var offsetY=Math.max(this.options.dotRadiusthis.ratio,lineWidth2);var width=this.canvas.width-offsetX2;var height=this.canvas.height-offsetY2;var minValue=Math.min.apply(Math,points);var maxValue=Math.max.apply(Math,points);var bottomValue=this.options.minValue!=undefinedthis.options.minValueMath.min(minValue,this.options.maxMinValue!=undefinedthis.options.maxMinValueminValue);var topValue=this.options.maxValue!=undefinedthis.options.maxValueMath.max(maxValue,this.options.minMaxValue!=undefinedthis.options.minMaxValuemaxValue);var minX=offsetX;var maxX=offsetX;var x=offsetX;var y=getY.bind(points,bottomValue,topValue,offsetY,height);var delta=width(points.length-1);var dot=drawDot.bind(this,this.options.dotRadiusthis.ratio,offsetX,width+offsetX);var line=drawLine.bind(this,offsetX,width+offsetX);this.context.save();this.context.strokeStyle=this.options.lineColor;this.context.fillStyle=this.options.lineColor;this.context.lineWidth=lineWidth;this.context.lineCap='round';this.context.lineJoin='round';if(this.options.fillBelow&&points.length1){this.context.save();this.context.beginPath();this.context.moveTo(x,y(0));for(var i=1;ipoints.length;i++){x+=delta;minX=points[i]==minValuexminX;maxX=points[i]==maxValuexmaxX;this.context.lineTo(x,y(i));}
this.context.lineTo(width+offsetX,height+offsetY+lineWidth2);this.context.lineTo(offsetX,height+offsetY+lineWidth2);this.context.fill();if(this.options.fillLighten0){this.context.fillStyle='white';this.context.globalAlpha=this.options.fillLighten;this.context.fill();this.context.globalAlpha=1;}else if(this.options.fillLighten0){this.context.fillStyle='black';this.context.globalAlpha=-this.options.fillLighten;this.context.fill();}
this.context.restore();}
x=offsetX;this.context.beginPath();this.context.moveTo(x,y(0));for(var i=1;ipoints.length;i++){x+=delta;this.context.lineTo(x,y(i));}
this.context.stroke();this.context.restore();line(this.options.bottomLine,0,offsetY);line(this.options.topLine,0,height+offsetY+lineWidth2);dot(this.options.startColor,this.options.startLine,offsetX+(points.length==1width20),y(0));dot(this.options.endColor,this.options.endLine,offsetX+(points.length==1width2width),y(points.length-1));dot(this.options.minColor,this.options.minLine,minX+(points.length==1width20),y(points.indexOf(minValue)));dot(this.options.maxColor,this.options.maxLine,maxX+(points.length==1width20),y(points.indexOf(maxValue)));}
function minmax(a,b,c){return Math.max(a,Math.min(b,c));}
return Sparkline;}));